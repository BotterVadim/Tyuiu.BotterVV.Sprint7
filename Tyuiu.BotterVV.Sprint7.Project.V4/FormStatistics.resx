<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKsQw+SrEMpkqwDKpKsAyqSrAMqkqwDKpKsAyqSrAMqkqw
        DKpKsAyqSrAMqkqwDKpKsAyqSrAMqkqwDKpKsAyqSrAMqkqwDKpKsAyqSrAMqkqwDKpKsAyqSrEMqUuv
        C1wAAAAAAP8AAUqwDK9KsA3MSrANzEmwDKcAAAAAAAAAAE2zCR5KsA1kS6EObUmbDnBJmw5wSKYMakuv
        DWZKsQx/SrAM90qwDP9Jqw3/SaUN/0moDP9KsAz/SrAM/0qwDP9KsAz/SrAM/0mrDf9Jpwz/SKQMvEii
        Dm5Lrw1mSbEKMQAAAAAAAAAATK8MQEuxDFVLsQxVSK4NPAAAAAAAAAAAAAAAAAAAAAA9KxY7OyoU8jsq
        FP87KRTRSo4QT0uxDYxKsAz6SrAM/0NyD/87KhT/P08S/0qwDP9KsAz/SrAM/0qwDP9Hmw3/PDcT/zsq
        FP88NRT4Ro8Pi0uwDXdLsA13S7ANd0uwDXdLsA13Sa8Lc0ivECAAAAAASq8MU0mwDOxKsAzuSrAM7Umw
        C149KxY7OyoU8jsqFP88MxPiSaANoUmxDJlJsQyZQWERyDsqFP8+QxPjSbEMmUmxDJlJsQyZRZEOqTsy
        FPU7KhT/PDMU80aUDqdJsQyZSbEMmUmxDJlJsQyZSbEMmUmxDJlKsAyVTbMKMgAAAABJtgAHTbMKMkuv
        CjNLrwozVaoACQAAAAA9KxY7OyoU8jsqFP87KhTnOikVlToqFIw6KRTBOyoU/zsqFOA6KhSMOioUjDoq
        E547KhTnOyoU/zsqFOI6LBYjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9KxY7OyoU8jsqFP87KhPUQCsVJDoqFH87KhT/OysUvzwt
        DxE5LxM2OioU6DsqFP87KhTiOiwWIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9KxY7OyoU8jsqFP87KRTROyoUgTsq
        FP87KxW6OS0TKDsqFOY7KhT/OyoU4josFiMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9KxY7OyoU8jsq
        FP85KBTnNygU/zQnE8syJBHqMCQS/y8iEug2KBQmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAuIxVIKR8R9ykeEP8pHhD/Kh4P+ykeEP8qIBDpLx4SKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6KhVhOyoU6TsqFOk7KhTpOyoU6Tsq
        FOk7KhTpOyoU6TsqFOk7KRTuOikU/jopFP87KRP8OigU/DoqFew7KhTpOyoU6TsqFOk7KhTpOyoU6Tsq
        FOk7KhTpOyoU6TkrEzYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwrE2s7KhT/cmdY/4d9
        cP+HfXD/h31w/4d9cP+HfXD/h31w/4d9cP+Admj/h31w/4Z9cP+Bdmn/h31w/4d9cP+HfXD/h31w/4d9
        cP+HfXD/h31w/2RXRv87KhT/PCsVPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPCsTazsq
        FP++urT/7e3t/+3t7f/t7e3/7e3t/+3t7f/t7e3/7e3t/+3t7f/t7e3/7e3t/+3t7f/t7e3/7e3t/+3t
        7f/t7e3/7e3t/+3t7f/t7e3/nZWL/zsqFP88KxU8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA8KxNrOyoU/766tP/t7e3/7e3t/+3t7f/r7O3/7e3t/+3t7f/t7e3/7e3t/+3t7f/t7e3/7e3t/+3t
        7f/t7e3/7e3t/+3t7f/t7e3/7e3t/+3t7f+dlYv/OyoU/zwrFTwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADwrE2s7KhT/vrq0/+3t7f/t7e3/Y8v1/xi4+v+f2fL/7e3t/+3t7f/t7e3/7e3t/+3t
        7f/k6uH/i8lm/4nIY//j6d//7e3t/+3t7f/t7e3/7e3t/52Vi/87KhT/PCsVPAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAPCsTazsqFP++urT/7e3t/+3t7f8iuvn/E7f7/1a95v/t7e3/7e3t/+3t
        7f/t7e3/7e3t/5/Mgv9KsAz/SrAM/57QgP/t7e3/7e3t/+3t7f/t7e3/nZWL/zsqFP88KxU8AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8KxNrOyoU/766tP/t7e3/7e3t/63d8f9MqtD/T1hR/+jn
        5//t7e3/7e3t/+vr6/+qpJz/TGEh/0qwDP9KsAz/rs+X/+3t7f/t7e3/7e3t/+3t7f+dlYv/OyoU/zwr
        FTwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwrE2s7KhT/vrq0/+3t7f/t7e3/7e3t/+zs
        7P9tYVH/ioB2/+3t7f/Hw77/Y1ZF/1ZINf+4s6z/y+G+/2p4SP+Phnv/7e3t/+3t7f/t7e3/7e3t/52V
        i/87KhT/PCsVPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPCsTazsqFP++urT/7e3t/+3t
        7f/t7e3/7e3t/6Ol4v8xOvT/OUDk/0Y6P/+jm5L/6urp/+3t7f/t7e3/0c/L/0Q0H//b2df/7e3t/+3t
        7f/t7e3/nZWL/zsqFP88KxU8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8KxNrOyoU/766
        tP/t7e3/7e3t/+3t7f/t7e3/Xmb7/y86//8vOv//kJTt/+3t7f/t7e3/7e3t/+3t7f/t7e3/gHZo/4J4
        a//t7e3/7e3t/+3t7f+dlYv/OyoU/zwrFTwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwr
        E2s7KhT/vrq0/+3t7f/t7e3/7e3t/+3t7f+Plfb/Lzr//zQ////DxvH/7e3t/+3t7f/t7e3/7e3t/+3t
        7f/ezL//1Gcj/+mviv/t7e3/7e3t/52Vi/87KhT/PCsVPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAPCsTazsqFP++urT/7e3t/+3t7f/t7e3/7e3t/+3t7f/HyfH/1tfv/+3t7f/t7e3/7e3t/+3t
        7f/t7e3/7e3t//LKsv//diT/+ZZb/+3t7f/t7e3/nZWL/zsqFP88KxU8AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA8KxNrOyoU/766tP/t7e3/7e3t/+3t7f/t7e3/7e3t/+3t7f/t7e3/7e3t/+3t
        7f/t7e3/7e3t/+3t7f/t7e3/7ezs//LPuf/u49z/7e3t/+3t7f+dlYv/OyoU/zwrFTwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADwrE2s7KhT/vrq0/+3t7f/t7e3/7e3t/+3t7f/t7e3/7e3t/+3t
        7f/t7e3/7e3t/+3t7f/t7e3/7e3t/+jo6P/k5OT/4ODg/93d3f/Y2Nj/09PT/5SMg/87KhT/PCsVPAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPCsTazsqFP+sqaP/y8vL/8fHx//Cw8P/v7+//7q6
        uv+2trb/s7Oz/62trf+pqqr/paam/6Kiov+dnZ3/nZ2d/52dnf+dnZ3/nZ2d/52dnf+dnZ3/gHpy/zsq
        FP88KxU8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAORwcCTkcHAk7KRRwOyoU/2NYSv9vZFr/b2Ra/29k
        Wv9vZFr/b2Ra/29kWv9vZFr/b2Ra/29kWv9vZFr/b2Ra/29kWv9vZFr/b2Ra/29kWv9vZFr/b2Ra/29k
        Wv9ZTD7/OyoU/z0qF0M5HBwJSSQkBwAAAAAAAAAAAAAAAAAAAAA7KhT/OyoU/zsqFP87KhT/OyoU/zsq
        FP87KhT/OyoU/zsqFP87KhT/OyoU/zsqFP87KhT/OyoU/zsqFP87KhT/OyoU/zsqFP87KhT/OyoU/zsq
        FP87KhT/OyoU/zsqFP87KhT/OyoU/zsqFP87KhTQAAAAAAAAAAAAAAAAAAAAADsqFGg7KhRoOyoUaDsq
        FGg7KhRoOyoUaDsqFGg7KhRoOyoUaDsqFGg7KhRoOyoUaDspE647KhT/OioU1jsqFGg7KhRoOyoUaDsq
        FGg7KhRoOyoUaDsqFGg7KhRoOyoUaDsqFGg7KhRoOyoUaDorFVQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPCkTXjsqFM46KxWVAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////AAAAgwAAAMPAAAAEAAAABBAAD//4AB///AA///4Af///A
        P//AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AA
        AD8AAAAPAAAADwAAAA//8f////////////97InN0YXR1cyI6MCwibXNnIjoiRXJyb3IiLCJyZWRpcmVj
        dCI6IiJ9
</value>
  </data>
</root>